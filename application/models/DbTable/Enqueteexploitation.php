<?php

class Application_Model_DbTable_Enqueteexploitation extends Zend_Db_Table_Abstract
{

    protected $_name = 'enquete_exploitation';
    private $operator ;
    private $db;

    public function getAllCodeEnqExpol()
    {

    }

    public function getLastEnquete()
    {
        /*
        *   RECUPERATION DERNIERE ENQUETE (TABLEAU)
        */
        $select = $this->select();
        $select->from('enquete_exploitation',array('lastId'=>'max(CODEQUEST)'));
        return $this->fetchAll($select)->toArray();
    }
    
    public function getOperatorById($id)
    {
        /*
        *   RECHERCHE OPERATEUR PAR ID AVEC JOINTURE TABLE ENQUETE (TABLEAU)
        */
        $selectExploit = $this->select()->setIntegrityCheck(false);
        $selectExploit->from(
            'enquete_exploitation',
            array('operateur.CODEEXPL','operateur.CODETYP','operateur.ADRESSE','operateur.NOMEXPLOITANT','enquete_exploitation.CODEREG','enquete_exploitation.CODEDIST','enquete_exploitation.CODECOM','enquete_exploitation.CODEFKT','enquete_exploitation.C11A1','enquete_exploitation.C11A2','enquete_exploitation.C11A3','enquete_exploitation.C11A4','enquete_exploitation.C11B1','enquete_exploitation.C11AB2','enquete_exploitation.C11B3','enquete_exploitation.C11B4','enquete_exploitation.C12'));
        $selectExploit->join(array('operateur'), 'operateur.CODEEXPL=enquete_exploitation.CODEEXPL');
        $selectExploit->where("operateur.CODEEXPL = ".$id."");
        return $this->fetchAll($selectExploit)->toArray();
	}
	
	public function getEnqueteById($id)
    {
        /*
        *   RECHERCHE ENQUETE PAR ID (TABLEAU)
        */
		$selectEnq = $this->select()->from('enquete_exploitation');
        $selectEnq->where("CODEQUEST = " . $id );
		return $this->fetchAll($selectEnq)->toArray()[0];
    }

    public function saveEnquete($array)
    {
        /*
        *   INSERTION ENQUETE
        */
        return $this->insert($array);
    }

    public function addNewEnquete($codeQuest,$codeReg,$codeDist,$codeCom,$codeFkt,$codeExpl)
    {
        /*
        *   AJOUT NOUVELLE ENQUETE
        */
        $this->insert(
            array(
                'CODEQUEST' => $codeQuest,
                'CODEREG' => $codeReg,
                'CODEDIST' => $codeDist,
                'CODECOM' => $codeCom,
                'CODEFKT' => $codeFkt,
                'CODEEXPL' => $codeExpl,
                'DATEENQ' => date('y-m-d')
            )
        );
    }
	
	public function addNewOperatorInfo($codeQuest,$codeReg,$codeDist,$codeCom,$codeFkt,$codeExpl)
    {
        /*
        *   AJOUT NOUVELLE ENQUETE POUR REGIONS ET DISTRICTS
        */
        $this->insert(
            array(
                'CODEQUEST' => $codeQuest,
                'CODEREG' => $codeReg,
                'CODEDIST' => $codeDist,
                'CODECOM' => $codeCom,
                'CODEFKT' => $codeFkt,
                'CODEEXPL' => $codeExpl,
                'DATEENQ' => date('y-m-d'),
				'validation' => "-5"
            )
        );
    }

    public function sumC10()
    {
        /*
        *   RETURN TOUS LES SOMMES C.. (tableau)
        */
        $select = $this->select()->from('enquete_exploitation' ,array('C10B1' => 'SUM(C10B1)','C10B2' => 'SUM(C10B2)','C10B3' => 'SUM(C10B3)','C10B4' => 'SUM(C10B4)'));
        $select->group('CODEEXPL'); 
        return $this->fetchAll($select)->toArray();
    }

    public function getNumbers($col)
    {
        $this->db = Zend_Db_Table_Abstract::getDefaultAdapter();
        $stmt = $this->db->query("SELECT COUNT(CODEEXPL) AS CNT FROM (SELECT CODEEXPL,MAX(".$col.") AS MX FROM enquete_exploitation WHERE enquete_exploitation.validation = 1 GROUP BY CODEEXPL) AS TBL WHERE MX > 0 ORDER BY CNT DESC");
        $ret =  $stmt->fetchAll();
        
        return $ret[0]["CNT"];
    }

    public function getdataCommunes(){
        $this->db = Zend_Db_Table_Abstract::getDefaultAdapter();
        $stmt = $this->db->query("SELECT COUNT(CODEQUEST) AS NB,commune.NOM_COMM FROM enquete_exploitation JOIN commune ON enquete_exploitation.CODECOM=commune.CODECOM JOIN operateur ON enquete_exploitation.CODEEXPL=operateur.CODEEXPL WHERE operateur.VALIDE = 1 GROUP BY commune.CODECOM ORDER BY NB DESC LIMIT 0,5");
        
        $retu =  $stmt->fetchAll();
        
        $ret = array("","");
        
        foreach($retu as $data)
        {
            $ret[1].= '"'.$data["NB"].'",';
            $ret[0].= '"'.$data["NOM_COMM"].'",';
        }
        
        $ret[0] = chop($ret[0]);
        $ret[1] = chop($ret[1]);
        
        return $ret;
    }

    public function getdataRegion(){
        
        $this->db = Zend_Db_Table_Abstract::getDefaultAdapter();
        $stmt = $this->db->query("SELECT COUNT(CODEQUEST) AS NB,region.NOM_REG FROM enquete_exploitation JOIN region ON enquete_exploitation.CODEREG=region.CODEREG JOIN operateur ON enquete_exploitation.CODEEXPL=operateur.CODEEXPL WHERE operateur.VALIDE = 1 GROUP BY region.CODEREG ORDER BY NB DESC LIMIT 0,5");
        
        $retu =  $stmt->fetchAll();
        
        $ret = array("","");
        
        foreach($retu as $data)
        {
            $ret[1].= '"'.$data["NB"].'",';
            $ret[0].= '"'.$data["NOM_REG"].'",';
        }
        
        $ret[0] = chop($ret[0]);
        $ret[1] = chop($ret[1]);
        
        return $ret;
    }

    public function getdataDistrict(){
        
        $this->db = Zend_Db_Table_Abstract::getDefaultAdapter();
        $stmt = $this->db->query("SELECT COUNT(CODEQUEST) AS NB,district.NOM_DIST FROM enquete_exploitation JOIN district ON enquete_exploitation.CODEDIST=district.CODEDIST JOIN operateur ON enquete_exploitation.CODEEXPL=operateur.CODEEXPL WHERE operateur.VALIDE = 1 GROUP BY district.CODEDIST ORDER BY NB DESC LIMIT 0,5");
        
        $retu =  $stmt->fetchAll();
        
        $ret = array("","");
        
        foreach($retu as $data)
        {
            $ret[1].= '"'.$data["NB"].'",';
            $ret[0].= '"'.$data["NOM_DIST"].'",';
        }
        
        $ret[0] = chop($ret[0]);
        $ret[1] = chop($ret[1]);
        
        return $ret;
    }
    
    public function getdataFokontany(){
        
        $this->db = Zend_Db_Table_Abstract::getDefaultAdapter();
        $stmt = $this->db->query("SELECT COUNT(CODEQUEST) AS NB,fokontany.NOMFKT FROM enquete_exploitation JOIN fokontany ON enquete_exploitation.CODEFKT=fokontany.CODEFKT JOIN operateur ON enquete_exploitation.CODEEXPL=operateur.CODEEXPL WHERE operateur.VALIDE = 1 GROUP BY fokontany.CODEFKT ORDER BY NB DESC LIMIT 0,5");
        
        $retu =  $stmt->fetchAll();
        
        $ret = array("","");
        
        foreach($retu as $data)
        {
            $ret[1].= '"'.$data["NB"].'",';
            $ret[0].= '"'.$data["NOMFKT"].'",';
        }
        
        $ret[0] = chop($ret[0]);
        $ret[1] = chop($ret[1]);
        
        return $ret;
    }
    
    public function getdataPerFok(){
        
        $this->db = Zend_Db_Table_Abstract::getDefaultAdapter();
        $stmt = $this->db->query("SELECT SUM(C12) AS C12S,NOMFKT from enquete_exploitation JOIN fokontany ON enquete_exploitation.CODEFKT=fokontany.CODEFKT WHERE enquete_exploitation.validation = 1 GROUP BY fokontany.CODEFKT ORDER BY C12S DESC");
        
        $retu =  $stmt->fetchAll();
        
        $ret = array("","");
        
        foreach($retu as $data)
        {
            $ret[1].= '"'.$data["C12S"].'",';
            $ret[0].= '"'.$data["NOMFKT"].'",';
        }
        
        $ret[0] = chop($ret[0]);
        $ret[1] = chop($ret[1]);
        
        return $ret;
    }
    
    public function getDataPerComFok($comm){
        
        $this->db = Zend_Db_Table_Abstract::getDefaultAdapter();
        $stmt = $this->db->query("SELECT SUM(C12) AS NB,commune.NOM_COMM,fokontany.NOMFKT FROM enquete_exploitation JOIN commune ON enquete_exploitation.CODECOM=commune.CODECOM JOIN fokontany ON enquete_exploitation.CODEFKT=fokontany.CODEFKT WHERE commune.CODECOM=".$comm." AND enquete_exploitation.validation = 1 GROUP BY fokontany.CODEFKT ORDER BY NB DESC");
        
        $stmt2 = $this->db->query("SELECT SUM(C12) AS NB FROM enquete_exploitation WHERE CODECOM=".$comm."");
        
        $retu =  $stmt->fetchAll();
        $retu2 =  $stmt2->fetchAll();
        
        $ret = array("","");
        
        $ret[2] = $retu2[0]["NB"];
        
        foreach($retu as $data)
        {
            $ret[1].= '"'.($data["NB"]).'",';
            $ret[0].= '"'.$data["NOMFKT"].'",';
        }
        
        $ret[0] = chop($ret[0]);
        $ret[1] = chop($ret[1]);
        
        return $ret;
        
    }

    
    public function getDataPerProdAllCommune()
    {
        $this->db = Zend_Db_Table_Abstract::getDefaultAdapter();
        $communes = array();
        for($i=1; $i < 5; $i++){
            $stmt = $this->db->query("SELECT COUNT(CODEEXPL) AS NB,NOM_COMM FROM enquete_exploitation JOIN commune ON enquete_exploitation.CODECOM=commune.CODECOM WHERE c10b".$i.">0 AND enquete_exploitation.validation = 1 GROUP BY NOM_COMM");
            
            $retu =  $stmt->fetchAll();
            
            foreach($retu as $data){
                $temp[$i - 1][$data["NOM_COMM"]] = $data["NB"];
                if(!in_array($data["NOM_COMM"], $communes)){
                    array_push($communes, $data["NOM_COMM"]);
                }
            }
        }
        
        $ret[0] = "";
        $ret[1] = "";
        
        for($i=1; $i < 5; $i++){
            
            foreach($communes as $commune){
                $ret[0].= '"'.$commune.'",';
                if(array_key_exists($commune, $temp[$i - 1]))
                    $ret[1].= $temp[$i - 1][$commune].',';
                else $ret[1].= '0,';
            }
            
            $ret[0].=',';
            $ret[1].=',';
            
        }
        return $ret;
    }

    public function getNumbersPerCommune($comm, $type)
    {
        $this->db = Zend_Db_Table_Abstract::getDefaultAdapter();
        $stmt = $this->db->query("SELECT COUNT(*) AS NB FROM (SELECT DISTINCT operateur.CODEEXPL FROM operateur JOIN enquete_exploitation ON operateur.CODEEXPL=enquete_exploitation.CODEEXPL WHERE CODECOM=".$comm." AND CODETYP=".$type." AND operateur.VALIDE = 1 GROUP BY CODEEXPL) AS tmptbl");
        
        $retu =  $stmt->fetchAll();
        
        return $retu[0]["NB"];
        
    }
	
	public function getNumberPending($comm)
	{
		$this->db = Zend_Db_Table_Abstract::getDefaultAdapter();
        $stmt = $this->db->query("SELECT count(*) AS NB FROM enquete_exploitation WHERE validation = 0 AND CODECOM = ".$comm."");
        
        $retu =  $stmt->fetchAll();
		return $retu[0]["NB"];
	}
	
	public function getPendingExpl($comm)
	{
		$this->db = Zend_Db_Table_Abstract::getDefaultAdapter();
        $stmt = $this->db->query("SELECT DATEENQ,enquete_exploitation.CODEQUEST,enquete_exploitation.CODEEXPL,NOMEXPLOITANT,ADRESSE,NUMTEL,C12 FROM enquete_exploitation JOIN operateur ON enquete_exploitation.CODEEXPL=operateur.CODEEXPL WHERE validation = 0 AND CODECOM = ".$comm." ORDER BY DATEENQ ASC");
        
        return $stmt->fetchAll();
	}
	
	public function saveEnqueteCollector($array){
		
		return $this->insert($array);
		
	}
}

